{"ast":null,"code":"var _jsxFileName = \"/home/apoorv.bhatnagar/Downloads/cine-trail/src/pages/home/homePage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchhome } from '../../api/homeAPI';\nimport MovieTitle from '../../components/movie/movieTitle';\nimport Paginate from '../../components/paginate/paginate';\nimport Genres from '../../components/genres/genres';\nimport Error from '../../components/error/error';\nimport Movie from '../../components/movie/movie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [stateData, setStateData] = useState('fulfilled');\n  const [genre, setGenre] = useState({\n    id: 0,\n    name: 'All'\n  });\n  const [selectedYear, setSelectedYear] = useState('2023');\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const [queryParams, setQueryParams] = useSearchParams();\n  const handlePage = num => {\n    setPage(num);\n    setQueryParams({\n      genre: genre.name.toLocaleLowerCase().trim(),\n      id: genre.id.toString(),\n      page: num.toString(),\n      year: selectedYear\n    });\n  };\n  const handleGenre = toggleGenre => {\n    setGenre(toggleGenre);\n    setPage(1);\n    setQueryParams({\n      genre: toggleGenre.name.toLocaleLowerCase().trim(),\n      id: toggleGenre.id.toString(),\n      year: selectedYear,\n      page: '1'\n    });\n  };\n  useEffect(() => {\n    var _queryParams$get, _queryParams$get2, _queryParams$get3, _queryParams$get4;\n    const id = (_queryParams$get = queryParams.get('id')) !== null && _queryParams$get !== void 0 ? _queryParams$get : 0;\n    const genre = (_queryParams$get2 = queryParams.get('genre')) !== null && _queryParams$get2 !== void 0 ? _queryParams$get2 : 'All';\n    setGenre({\n      id: Number(id),\n      name: genre\n    });\n    setSelectedYear((_queryParams$get3 = queryParams.get('year')) !== null && _queryParams$get3 !== void 0 ? _queryParams$get3 : '2023');\n    setPage(Number((_queryParams$get4 = queryParams.get('page')) !== null && _queryParams$get4 !== void 0 ? _queryParams$get4 : '1'));\n  }, [queryParams]);\n  useEffect(() => {\n    var _queryParams$get5, _queryParams$get6, _queryParams$get7, _queryParams$get8;\n    const id = (_queryParams$get5 = queryParams.get('id')) !== null && _queryParams$get5 !== void 0 ? _queryParams$get5 : 0;\n    const genre = (_queryParams$get6 = queryParams.get('genre')) !== null && _queryParams$get6 !== void 0 ? _queryParams$get6 : 'All';\n    const page = (_queryParams$get7 = queryParams.get('page')) !== null && _queryParams$get7 !== void 0 ? _queryParams$get7 : '1';\n    const year = (_queryParams$get8 = queryParams.get('year')) !== null && _queryParams$get8 !== void 0 ? _queryParams$get8 : '2023';\n    (async () => {\n      try {\n        setStateData('pending');\n        const data = genre.toLowerCase() !== 'all' ? await fetchhome(year, Number(page), null, Number(id)) : await fetchhome(year, Number(page), null, null);\n        setStateData('fulfilled');\n        setData(data.results);\n        setTotalPage(data.total_pages);\n      } catch {\n        setStateData('rejected');\n      }\n    })();\n  }, [genre, selectedYear, page, queryParams]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title__head\",\n      children: /*#__PURE__*/_jsxDEV(MovieTitle, {\n        title: `Most Popular In ${selectedYear}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Genres, {\n      handleGenre: handleGenre,\n      genre: genre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), stateData === 'rejected' && /*#__PURE__*/_jsxDEV(Error, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 36\n    }, this), stateData === 'pending', data.length > 0 && stateData === 'fulfilled' && /*#__PURE__*/_jsxDEV(Movie, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 56\n    }, this), totalPage > 1 && stateData !== 'pending' && /*#__PURE__*/_jsxDEV(Paginate, {\n      totalPage: totalPage,\n      page: page,\n      handlePage: handlePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"IKZgwzWUZIXmlJJoP5yPn/MiEyQ=\", false, function () {\n  return [useSearchParams];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","useSearchParams","fetchhome","MovieTitle","Paginate","Genres","Error","Movie","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","data","setData","stateData","setStateData","genre","setGenre","id","name","selectedYear","setSelectedYear","page","setPage","totalPage","setTotalPage","queryParams","setQueryParams","handlePage","num","toLocaleLowerCase","trim","toString","year","handleGenre","toggleGenre","_queryParams$get","_queryParams$get2","_queryParams$get3","_queryParams$get4","get","Number","_queryParams$get5","_queryParams$get6","_queryParams$get7","_queryParams$get8","toLowerCase","results","total_pages","children","className","title","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/home/apoorv.bhatnagar/Downloads/cine-trail/src/pages/home/homePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchhome } from '../../api/homeAPI';\nimport { IPoster } from '../../interfaces/poster.interface';\nimport { IGenres } from '../../interfaces/genres.interface';\n\nimport MovieTitle from '../../components/movie/movieTitle';\n\nimport Paginate from '../../components/paginate/paginate';\n\nimport Genres from '../../components/genres/genres';\nimport Error from '../../components/error/error';\nimport Movie from '../../components/movie/movie';\n\nconst HomePage: React.FC = () => {\n  const [data, setData] = useState<IPoster[]>([]);\n  const [stateData, setStateData] = useState('fulfilled');\n  const [genre, setGenre] = useState<IGenres>({ id: 0, name: 'All' });\n  const [selectedYear, setSelectedYear] = useState('2023');\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n\n  const [queryParams, setQueryParams] = useSearchParams();\n\n  const handlePage = (num: number) => {\n    setPage(num);\n    setQueryParams({\n      genre: genre.name.toLocaleLowerCase().trim(),\n      id: genre.id.toString(),\n      page: num.toString(),\n      year: selectedYear,\n    });\n  };\n\n  const handleGenre = (toggleGenre: IGenres) => {\n    setGenre(toggleGenre);\n    setPage(1);\n    setQueryParams({\n      genre: toggleGenre.name.toLocaleLowerCase().trim(),\n      id: toggleGenre.id.toString(),\n      year: selectedYear,\n      page: '1',\n    });\n  };\n\n \n\n  useEffect(() => {\n    const id = queryParams.get('id') ?? 0;\n    const genre = queryParams.get('genre') ?? 'All';\n\n    setGenre({ id: Number(id), name: genre });\n\n    setSelectedYear(queryParams.get('year') ?? '2023');\n    setPage(Number(queryParams.get('page') ?? '1'));\n  }, [queryParams]);\n\n  useEffect(() => {\n    const id = queryParams.get('id') ?? 0;\n    const genre = queryParams.get('genre') ?? 'All';\n    const page = queryParams.get('page') ?? '1';\n    const year = queryParams.get('year') ?? '2023';\n\n    (async () => {\n      try {\n        setStateData('pending');\n\n        const data =\n          genre.toLowerCase() !== 'all'\n            ? await fetchhome(year, Number(page), null, Number(id))\n            : await fetchhome(year, Number(page), null, null);\n        setStateData('fulfilled');\n        setData(data.results);\n        setTotalPage(data.total_pages);\n      } catch {\n        setStateData('rejected');\n      }\n    })();\n  }, [genre, selectedYear, page, queryParams]);\n\n  return (\n    <>\n      <div className=\"title__head\">\n        <MovieTitle title={`Most Popular In ${selectedYear}`} />\n       \n      </div>\n      <Genres handleGenre={handleGenre} genre={genre} />\n      {stateData === 'rejected' && <Error />}\n      {stateData === 'pending' }\n      {data.length > 0 && stateData === 'fulfilled' && <Movie data={data} />}\n      {totalPage > 1 && stateData !== 'pending' && (\n        <Paginate totalPage={totalPage} page={page} handlePage={handlePage} />\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}